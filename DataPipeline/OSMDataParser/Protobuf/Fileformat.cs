// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MapData/fileformat.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from MapData/fileformat.proto</summary>
public static partial class FileformatReflection {

  #region Descriptor
  /// <summary>File descriptor for MapData/fileformat.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static FileformatReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhNYXBEYXRhL2ZpbGVmb3JtYXQucHJvdG8ibAoEQmxvYhILCgNyYXcYASAB",
          "KAwSEAoIcmF3X3NpemUYAiABKAUSEQoJemxpYl9kYXRhGAMgASgMEhEKCWx6",
          "bWFfZGF0YRgEIAEoDBIfChNPQlNPTEVURV9iemlwMl9kYXRhGAUgASgMQgIY",
          "ASI/CgpCbG9iSGVhZGVyEgwKBHR5cGUYASACKAkSEQoJaW5kZXhkYXRhGAIg",
          "ASgMEhAKCGRhdGFzaXplGAMgAigF"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Blob), global::Blob.Parser, new[]{ "Raw", "RawSize", "ZlibData", "LzmaData", "OBSOLETEBzip2Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BlobHeader), global::BlobHeader.Parser, new[]{ "Type", "Indexdata", "Datasize" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Blob : pb::IMessage<Blob>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Blob> _parser = new pb::MessageParser<Blob>(() => new Blob());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Blob> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FileformatReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Blob() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Blob(Blob other) : this() {
    _hasBits0 = other._hasBits0;
    raw_ = other.raw_;
    rawSize_ = other.rawSize_;
    zlibData_ = other.zlibData_;
    lzmaData_ = other.lzmaData_;
    oBSOLETEBzip2Data_ = other.oBSOLETEBzip2Data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Blob Clone() {
    return new Blob(this);
  }

  /// <summary>Field number for the "raw" field.</summary>
  public const int RawFieldNumber = 1;
  private readonly static pb::ByteString RawDefaultValue = pb::ByteString.Empty;

  private pb::ByteString raw_;
  /// <summary>
  /// No compression
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Raw {
    get { return raw_ ?? RawDefaultValue; }
    set {
      raw_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "raw" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRaw {
    get { return raw_ != null; }
  }
  /// <summary>Clears the value of the "raw" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRaw() {
    raw_ = null;
  }

  /// <summary>Field number for the "raw_size" field.</summary>
  public const int RawSizeFieldNumber = 2;
  private readonly static int RawSizeDefaultValue = 0;

  private int rawSize_;
  /// <summary>
  /// When compressed, the uncompressed size
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int RawSize {
    get { if ((_hasBits0 & 1) != 0) { return rawSize_; } else { return RawSizeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      rawSize_ = value;
    }
  }
  /// <summary>Gets whether the "raw_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRawSize {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "raw_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRawSize() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "zlib_data" field.</summary>
  public const int ZlibDataFieldNumber = 3;
  private readonly static pb::ByteString ZlibDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString zlibData_;
  /// <summary>
  /// Possible compressed versions of the data.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ZlibData {
    get { return zlibData_ ?? ZlibDataDefaultValue; }
    set {
      zlibData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "zlib_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasZlibData {
    get { return zlibData_ != null; }
  }
  /// <summary>Clears the value of the "zlib_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearZlibData() {
    zlibData_ = null;
  }

  /// <summary>Field number for the "lzma_data" field.</summary>
  public const int LzmaDataFieldNumber = 4;
  private readonly static pb::ByteString LzmaDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString lzmaData_;
  /// <summary>
  /// PROPOSED feature for LZMA compressed data. SUPPORT IS NOT REQUIRED.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString LzmaData {
    get { return lzmaData_ ?? LzmaDataDefaultValue; }
    set {
      lzmaData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "lzma_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLzmaData {
    get { return lzmaData_ != null; }
  }
  /// <summary>Clears the value of the "lzma_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLzmaData() {
    lzmaData_ = null;
  }

  /// <summary>Field number for the "OBSOLETE_bzip2_data" field.</summary>
  public const int OBSOLETEBzip2DataFieldNumber = 5;
  private readonly static pb::ByteString OBSOLETEBzip2DataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString oBSOLETEBzip2Data_;
  /// <summary>
  /// Formerly used for bzip2 compressed data. Depreciated in 2010.
  /// </summary>
  [global::System.ObsoleteAttribute]
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString OBSOLETEBzip2Data {
    get { return oBSOLETEBzip2Data_ ?? OBSOLETEBzip2DataDefaultValue; }
    set {
      oBSOLETEBzip2Data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "OBSOLETE_bzip2_data" field is set</summary>
  [global::System.ObsoleteAttribute]
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOBSOLETEBzip2Data {
    get { return oBSOLETEBzip2Data_ != null; }
  }
  /// <summary>Clears the value of the "OBSOLETE_bzip2_data" field</summary>
  [global::System.ObsoleteAttribute]
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOBSOLETEBzip2Data() {
    oBSOLETEBzip2Data_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Blob);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Blob other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Raw != other.Raw) return false;
    if (RawSize != other.RawSize) return false;
    if (ZlibData != other.ZlibData) return false;
    if (LzmaData != other.LzmaData) return false;
    if (OBSOLETEBzip2Data != other.OBSOLETEBzip2Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRaw) hash ^= Raw.GetHashCode();
    if (HasRawSize) hash ^= RawSize.GetHashCode();
    if (HasZlibData) hash ^= ZlibData.GetHashCode();
    if (HasLzmaData) hash ^= LzmaData.GetHashCode();
    if (HasOBSOLETEBzip2Data) hash ^= OBSOLETEBzip2Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRaw) {
      output.WriteRawTag(10);
      output.WriteBytes(Raw);
    }
    if (HasRawSize) {
      output.WriteRawTag(16);
      output.WriteInt32(RawSize);
    }
    if (HasZlibData) {
      output.WriteRawTag(26);
      output.WriteBytes(ZlibData);
    }
    if (HasLzmaData) {
      output.WriteRawTag(34);
      output.WriteBytes(LzmaData);
    }
    if (HasOBSOLETEBzip2Data) {
      output.WriteRawTag(42);
      output.WriteBytes(OBSOLETEBzip2Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRaw) {
      output.WriteRawTag(10);
      output.WriteBytes(Raw);
    }
    if (HasRawSize) {
      output.WriteRawTag(16);
      output.WriteInt32(RawSize);
    }
    if (HasZlibData) {
      output.WriteRawTag(26);
      output.WriteBytes(ZlibData);
    }
    if (HasLzmaData) {
      output.WriteRawTag(34);
      output.WriteBytes(LzmaData);
    }
    if (HasOBSOLETEBzip2Data) {
      output.WriteRawTag(42);
      output.WriteBytes(OBSOLETEBzip2Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRaw) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Raw);
    }
    if (HasRawSize) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RawSize);
    }
    if (HasZlibData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ZlibData);
    }
    if (HasLzmaData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(LzmaData);
    }
    if (HasOBSOLETEBzip2Data) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(OBSOLETEBzip2Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Blob other) {
    if (other == null) {
      return;
    }
    if (other.HasRaw) {
      Raw = other.Raw;
    }
    if (other.HasRawSize) {
      RawSize = other.RawSize;
    }
    if (other.HasZlibData) {
      ZlibData = other.ZlibData;
    }
    if (other.HasLzmaData) {
      LzmaData = other.LzmaData;
    }
    if (other.HasOBSOLETEBzip2Data) {
      OBSOLETEBzip2Data = other.OBSOLETEBzip2Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Raw = input.ReadBytes();
          break;
        }
        case 16: {
          RawSize = input.ReadInt32();
          break;
        }
        case 26: {
          ZlibData = input.ReadBytes();
          break;
        }
        case 34: {
          LzmaData = input.ReadBytes();
          break;
        }
        case 42: {
          OBSOLETEBzip2Data = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Raw = input.ReadBytes();
          break;
        }
        case 16: {
          RawSize = input.ReadInt32();
          break;
        }
        case 26: {
          ZlibData = input.ReadBytes();
          break;
        }
        case 34: {
          LzmaData = input.ReadBytes();
          break;
        }
        case 42: {
          OBSOLETEBzip2Data = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class BlobHeader : pb::IMessage<BlobHeader>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BlobHeader> _parser = new pb::MessageParser<BlobHeader>(() => new BlobHeader());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<BlobHeader> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FileformatReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BlobHeader() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BlobHeader(BlobHeader other) : this() {
    _hasBits0 = other._hasBits0;
    type_ = other.type_;
    indexdata_ = other.indexdata_;
    datasize_ = other.datasize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BlobHeader Clone() {
    return new BlobHeader(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private readonly static string TypeDefaultValue = "";

  private string type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Type {
    get { return type_ ?? TypeDefaultValue; }
    set {
      type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return type_ != null; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    type_ = null;
  }

  /// <summary>Field number for the "indexdata" field.</summary>
  public const int IndexdataFieldNumber = 2;
  private readonly static pb::ByteString IndexdataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString indexdata_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Indexdata {
    get { return indexdata_ ?? IndexdataDefaultValue; }
    set {
      indexdata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "indexdata" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIndexdata {
    get { return indexdata_ != null; }
  }
  /// <summary>Clears the value of the "indexdata" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIndexdata() {
    indexdata_ = null;
  }

  /// <summary>Field number for the "datasize" field.</summary>
  public const int DatasizeFieldNumber = 3;
  private readonly static int DatasizeDefaultValue = 0;

  private int datasize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Datasize {
    get { if ((_hasBits0 & 1) != 0) { return datasize_; } else { return DatasizeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      datasize_ = value;
    }
  }
  /// <summary>Gets whether the "datasize" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDatasize {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "datasize" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDatasize() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as BlobHeader);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(BlobHeader other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Indexdata != other.Indexdata) return false;
    if (Datasize != other.Datasize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasType) hash ^= Type.GetHashCode();
    if (HasIndexdata) hash ^= Indexdata.GetHashCode();
    if (HasDatasize) hash ^= Datasize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasType) {
      output.WriteRawTag(10);
      output.WriteString(Type);
    }
    if (HasIndexdata) {
      output.WriteRawTag(18);
      output.WriteBytes(Indexdata);
    }
    if (HasDatasize) {
      output.WriteRawTag(24);
      output.WriteInt32(Datasize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasType) {
      output.WriteRawTag(10);
      output.WriteString(Type);
    }
    if (HasIndexdata) {
      output.WriteRawTag(18);
      output.WriteBytes(Indexdata);
    }
    if (HasDatasize) {
      output.WriteRawTag(24);
      output.WriteInt32(Datasize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
    }
    if (HasIndexdata) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Indexdata);
    }
    if (HasDatasize) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Datasize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(BlobHeader other) {
    if (other == null) {
      return;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasIndexdata) {
      Indexdata = other.Indexdata;
    }
    if (other.HasDatasize) {
      Datasize = other.Datasize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Type = input.ReadString();
          break;
        }
        case 18: {
          Indexdata = input.ReadBytes();
          break;
        }
        case 24: {
          Datasize = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Type = input.ReadString();
          break;
        }
        case 18: {
          Indexdata = input.ReadBytes();
          break;
        }
        case 24: {
          Datasize = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
